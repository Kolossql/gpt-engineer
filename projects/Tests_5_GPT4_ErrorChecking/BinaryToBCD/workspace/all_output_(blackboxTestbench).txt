The necessary blocks for the testbench are:

- Initialization block: This block will initialize the inputs and outputs and set up the simulation environment.
- Test case blocks: These blocks will each contain a different test case to be run on the module. Each block will set the input to a specific value, run the simulation, and check the output against the expected result.

The important edge cases to test are:

- Minimum input value (0)
- Maximum input value (255)
- A value in the middle of the range (128)
- A value that is a power of 2 (64)
- A value that is not a power of 2 (10)

Now, let's write the testbench module:

testbench.v
```verilog
`timescale 1ns / 1ps

module BinaryToBCD_tb;

    // Inputs
    reg [7:0] binary_input;

    // Outputs
    wire [11:0] BCD_output;

    // Instantiate the Unit Under Test (UUT)
    BinaryToBCD uut (
        .binary_input(binary_input), 
        .BCD_output(BCD_output)
    );

    initial begin
        // Initialize Inputs
        binary_input = 8'b0;

        // Dump waveforms
        $dumpfile("WaveOutput.vcd");
        $dumpvars(0, BinaryToBCD_tb);

        // Test Case 1: Minimum input value
        binary_input = 8'b0;
        #10;
        if (BCD_output == 12'b000000000000) $display("Test Case 1: Passed");
        else $display("Test Case 1: Failed");

        // Test Case 2: Maximum input value
        binary_input = 8'b11111111;
        #10;
        if (BCD_output == 12'b001001010101) $display("Test Case 2: Passed");
        else $display("Test Case 2: Failed");

        // Test Case 3: Middle of the range
        binary_input = 8'b10000000;
        #10;
        if (BCD_output == 12'b000110001000) $display("Test Case 3: Passed");
        else $display("Test Case 3: Failed");

        // Test Case 4: Power of 2
        binary_input = 8'b01000000;
        #10;
        if (BCD_output == 12'b000001100100) $display("Test Case 4: Passed");
        else $display("Test Case 4: Failed");

        // Test Case 5: Not a power of 2
        binary_input = 8'b00001010;
        #10;
        if (BCD_output == 12'b000000001010) $display("Test Case 5: Passed");
        else $display("Test Case 5: Failed");

        // End of tests
        $finish;
    end
endmodule
```
This testbench module will test the BinaryToBCD module with five different test cases and each edge case. It will output the results of the tests to the console and to a waveform file. The "$finish" command is used to end the simulation after all tests have been run.