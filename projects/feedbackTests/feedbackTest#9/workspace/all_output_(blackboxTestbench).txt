Blocks necessary for testing the ShiftRegister module:
1. Clock generator: To generate the clock signal for the testbench.
2. Reset generator: To generate the active-low reset signal for the testbench.
3. Data generator: To provide the data input for the testbench.
4. Shift enable generator: To provide the shift enable input for the testbench.
5. Monitor: To monitor the output of the ShiftRegister module and verify the correctness of the output.

Important edge cases to test in the testbench:
1. Initial state: Verify that the module starts with the initial state of stored data at 00000000.
2. Shift operation: Verify that the module correctly shifts the data bit on the rising edge of the clock when the shift enable signal is high.
3. Reset operation: Verify that the module resets to the initial state when the active-low reset signal is low.
4. Hold state: Verify that the module holds the current data without any shifting when the shift enable signal is low.
5. Output verification: Verify that the stored data output is updated correctly when there is a change in the data input.

Testbench module for ShiftRegister:
```verilog
module ShiftRegister_tb;

  // Inputs
  reg clk;
  reg reset;
  reg data;
  reg shift_enable;

  // Outputs
  wire [7:0] stored_data;

  // Instantiate the ShiftRegister module
  ShiftRegister dut (
    .clk(clk),
    .reset(reset),
    .data(data),
    .shift_enable(shift_enable),
    .stored_data(stored_data)
  );

  // Clock generator
  always #5 clk = ~clk;

  // Reset generator
  initial begin
    reset = 1;
    #10 reset = 0;
  end

  // Data generator
  initial begin
    data = 0;
    #20 data = 1;
    #20 data = 0;
    #20 data = 1;
    #20 data = 0;
  end

  // Shift enable generator
  initial begin
    shift_enable = 0;
    #30 shift_enable = 1;
    #40 shift_enable = 0;
    #50 shift_enable = 1;
    #60 shift_enable = 0;
  end

  // Monitor
  always @(posedge clk) begin
    $display("Stored Data: %b", stored_data);
    if (stored_data === 8'b00000000)
      $display("Passed: Initial state test");
    else if (stored_data === 8'b00000001)
      $display("Passed: Shift operation test");
    else if (stored_data === 8'b00000000)
      $display("Passed: Reset operation test");
    else if (stored_data === 8'b00000000)
      $display("Passed: Hold state test");
    else if (stored_data === 8'b00000001)
      $display("Passed: Output verification test");
    else
      $display("Failed: Unexpected output");
  end

  // Simulation end
  initial begin
    $dumpfile("WaveOutput.vcd");
    $dumpvars(0, ShiftRegister_tb);
    #100;
    $finish;
  end

endmodule
```

Note: The testbench assumes a clock period of 10 time units and simulates for 100 time units. Adjust the timing values as per the desired simulation duration.