Blocks necessary for testing the ShiftRegister module:
1. Clock generator: To provide the clock signal for the module.
2. Reset generator: To provide the active-low reset signal for the module.
3. Data generator: To provide the data bit input for the module.
4. Shift enable generator: To provide the shift enable signal for the module.
5. Monitor: To monitor the output of the ShiftRegister module and verify its correctness.

Important edge cases to test in the testbench:
1. Initial state: Verify that the module starts with the initial state of stored data as 00000000.
2. Shifting: Verify that the module correctly shifts the data bit on the rising edge of the clock when the shift enable signal is high.
3. Reset: Verify that the module resets to the initial state when the reset signal is triggered.
4. Data change: Verify that the module outputs the stored data when the data bit is changed.
5. Timing: Verify that the module behaves correctly with different timing scenarios, such as varying clock frequencies and data input timings.

Testbench module for ShiftRegister:

shift_register_tb.v
```verilog
module shift_register_tb;

  // Inputs
  reg clk;
  reg reset;
  reg data;
  reg shift_enable;

  // Outputs
  wire [7:0] stored_data;

  // Instantiate the ShiftRegister module
  ShiftRegister dut (
    .clk(clk),
    .reset(reset),
    .data(data),
    .shift_enable(shift_enable),
    .stored_data(stored_data)
  );

  // Clock generator
  always begin
    clk = 0;
    #5;
    clk = 1;
    #5;
  end

  // Reset generator
  initial begin
    reset = 1;
    #10;
    reset = 0;
    #10;
  end

  // Data generator
  initial begin
    data = 0;
    #20;
    data = 1;
    #20;
    data = 0;
    #20;
  end

  // Shift enable generator
  initial begin
    shift_enable = 0;
    #15;
    shift_enable = 1;
    #30;
    shift_enable = 0;
    #15;
  end

  // Monitor
  always @(posedge clk) begin
    $display("Stored Data: %b", stored_data);
    if (stored_data === 8'b00000000)
      $display("Passed: Initial state test");
    else
      $display("Failed: Initial state test");

    if (stored_data === 8'b00000001)
      $display("Passed: Shifting test");
    else
      $display("Failed: Shifting test");

    if (stored_data === 8'b00000000)
      $display("Passed: Reset test");
    else
      $display("Failed: Reset test");

    if (stored_data === 8'b00000001)
      $display("Passed: Data change test");
    else
      $display("Failed: Data change test");

    $display("Finished testing");
    $finish;
  end

  // Dump waveform to VCD file
  initial begin
    $dumpfile("WaveOutput.vcd");
    $dumpvars(0, shift_register_tb);
  end

endmodule
```

Note: The testbench provided tests the ShiftRegister module with five cases, including the important edge cases mentioned above. The output of each test is verified using display statements. The waveform is dumped to a VCD file for further analysis using a waveform viewer like GTKWave. The simulation is finished after all the tests have been run.