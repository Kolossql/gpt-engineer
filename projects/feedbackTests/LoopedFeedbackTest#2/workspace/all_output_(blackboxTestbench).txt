Blocks necessary for testing the ShiftRegister module:
1. Clock generator: To provide a clock signal for the module.
2. Reset generator: To provide an active-low reset signal for the module.
3. Data generator: To provide a data bit input for the module.
4. Shift enable generator: To provide a shift enable signal for the module.
5. Monitor: To monitor the output of the ShiftRegister module and verify its correctness.

Important edge cases to test in the testbench:
1. Initial state: Verify that the module starts with the initial state of stored data at 00000000.
2. Shift operation: Verify that the module correctly shifts the data bit on the rising edge of the clock when the shift enable signal is high.
3. Reset operation: Verify that the module resets to the initial state when the active-low reset signal is triggered.
4. Data change: Verify that the module outputs the stored data when the data bit input is changed.
5. No shift operation: Verify that the module does not shift the data when the shift enable signal is low.

Testbench module for ShiftRegister:

testbench_shiftregister.v
```verilog
module testbench_shiftregister;
  // Inputs
  reg clk;
  reg reset;
  reg data_in;
  reg shift_enable;

  // Outputs
  wire [7:0] data_out;

  // Instantiate the ShiftRegister module
  ShiftRegister dut (
    .clk(clk),
    .reset(reset),
    .data_in(data_in),
    .shift_enable(shift_enable),
    .data_out(data_out)
  );

  // Clock generator
  always #5 clk = ~clk;

  // Reset generator
  initial begin
    reset = 1;
    #10 reset = 0;
  end

  // Data generator
  initial begin
    data_in = 0;
    #20 data_in = 1;
    #20 data_in = 0;
  end

  // Shift enable generator
  initial begin
    shift_enable = 0;
    #15 shift_enable = 1;
    #25 shift_enable = 0;
  end

  // Monitor
  always @(posedge clk) begin
    $display("Data Out: %b", data_out);
    if (data_out === 8'b00000000)
      $display("Passed: Initial state test");
    else
      $display("Failed: Initial state test");
    if (data_out === 8'b00000001)
      $display("Passed: Shift operation test");
    else
      $display("Failed: Shift operation test");
    if (data_out === 8'b00000000)
      $display("Passed: Reset operation test");
    else
      $display("Failed: Reset operation test");
    if (data_out === 8'b00000010)
      $display("Passed: Data change test");
    else
      $display("Failed: Data change test");
    if (data_out === 8'b00000010)
      $display("Passed: No shift operation test");
    else
      $display("Failed: No shift operation test");
  end

  // Simulation end
  initial begin
    $dumpfile("WaveOutput.vcd");
    $dumpvars(0, testbench_shiftregister);
    #100 $finish;
  end
endmodule
```

Note: The testbench assumes a clock period of 10 time units and uses the `$display` statement to output the test results. The testbench also includes the necessary lines for waveform dumping and simulation termination.