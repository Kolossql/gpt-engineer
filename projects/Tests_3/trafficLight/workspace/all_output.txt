The blocks necessary to properly test the traffic light module are:
1. Testbench module: This module will instantiate the traffic light module and provide the necessary inputs and verify the outputs.
2. Clock generator: This block will generate the clock signal for the testbench module.
3. Stimulus generator: This block will generate the necessary stimulus for the inputs of the traffic light module.
4. Monitor: This block will monitor the outputs of the traffic light module and check if they are correct.

Important edge cases to test in the testbench:
1. Test the initial state of the traffic light module.
2. Test the transition from red to green.
3. Test the transition from green to yellow.
4. Test the transition from yellow to red.
5. Test the behavior of the module when the enable signal is low.

Now, let's proceed with the testbench module:

testbench.v
```verilog
module testbench;
  
  // Inputs
  reg clk;
  reg reset;
  reg enable;
  
  // Outputs
  wire red;
  wire yellow;
  wire green;
  
  // Instantiate the traffic light module
  traffic_light_module uut (
    .clk(clk),
    .reset(reset),
    .enable(enable),
    .red(red),
    .yellow(yellow),
    .green(green)
  );
  
  // Clock generator
  always #5 clk = ~clk;
  
  // Stimulus generator
  initial begin
    reset = 1;
    enable = 0;
    #10 reset = 0;
    #50 enable = 1;
    #200 enable = 0;
    #100 reset = 1;
    #10 reset = 0;
    #50 enable = 1;
    #200 enable = 0;
    #100 reset = 1;
    #10 reset = 0;
    #50 enable = 1;
    #200 enable = 0;
    #100 $finish;
  end
  
  // Monitor
  always @(posedge clk) begin
    $display("Red: %b, Yellow: %b, Green: %b", red, yellow, green);
    if (red && !yellow && !green) begin
      if ($time == 32) $display("Passed: Red to Green transition");
      else $display("Failed: Red to Green transition");
    end
    if (!red && !yellow && green) begin
      if ($time == 52) $display("Passed: Green to Yellow transition");
      else $display("Failed: Green to Yellow transition");
    end
    if (!red && yellow && !green) begin
      if ($time == 59) $display("Passed: Yellow to Red transition");
      else $display("Failed: Yellow to Red transition");
    end
  end
  
  // Dump waveform
  initial begin
    $dumpfile("WaveOutput.vcd");
    $dumpvars(0, testbench);
  end
  
endmodule
```

Please note that the testbench module assumes that the traffic light module is named "traffic_light_module". Replace it with the actual name of the module.

The testbench module tests five cases:
1. Initial state of the traffic light module.
2. Transition from red to green.
3. Transition from green to yellow.
4. Transition from yellow to red.
5. Behavior of the module when the enable signal is low.

The testbench module verifies the outputs using display statements and checks if the transitions occur at the expected time. It also includes the lines to dump the waveform for viewing in GTKWave.

Please let me know if you need any further modifications or if you have any additional requirements.