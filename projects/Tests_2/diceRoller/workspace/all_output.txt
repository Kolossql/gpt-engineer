The necessary blocks for testing the module are as follows:

1. Testbench module: This module will instantiate the module under test and provide stimulus to its inputs. It will also monitor the outputs and verify their correctness.

Important edge cases to test in the testbench:

1. Testing the initial state of the 4-sided die.
2. Testing the roll input when it is low.
3. Testing the behavior of the module when the active-low reset signal is asserted.
4. Testing invalid values for the die select input.
5. Testing the generation of random numbers for the simulated dice roll.

Now I will provide the content of the testbench module.

testbench.v
```verilog
module testbench;

  // Parameters
  parameter CLK_PERIOD = 10; // Clock period in ns

  // Signals
  reg clk;
  reg reset;
  reg [1:0] die_select;
  reg roll;
  wire [7:0] rolled_number;

  // Instantiate the module under test
  dice_roller dut (
    .clk(clk),
    .reset(reset),
    .die_select(die_select),
    .roll(roll),
    .rolled_number(rolled_number)
  );

  // Clock generation
  always #((CLK_PERIOD)/2) clk = ~clk;

  // Test stimulus
  initial begin
    // Initialize inputs
    reset = 1;
    die_select = 2'b00;
    roll = 0;

    // Release reset
    #((CLK_PERIOD)*2) reset = 0;

    // Test case 1: Initial state of 4-sided die
    #((CLK_PERIOD)*2) roll = 1;
    #((CLK_PERIOD)*10) roll = 0;
    $display("Test case 1: Initial state of 4-sided die");
    $display("Rolled Number: %d", rolled_number);
    $display("");

    // Test case 2: Roll input is low
    #((CLK_PERIOD)*2) roll = 0;
    $display("Test case 2: Roll input is low");
    $display("Rolled Number: %d", rolled_number);
    $display("");

    // Test case 3: Active-low reset
    #((CLK_PERIOD)*2) roll = 1;
    #((CLK_PERIOD)*2) reset = 1;
    #((CLK_PERIOD)*2) reset = 0;
    #((CLK_PERIOD)*10) roll = 0;
    $display("Test case 3: Active-low reset");
    $display("Rolled Number: %d", rolled_number);
    $display("");

    // Test case 4: Invalid die select input
    #((CLK_PERIOD)*2) roll = 1;
    #((CLK_PERIOD)*2) die_select = 2'b11;
    #((CLK_PERIOD)*10) roll = 0;
    $display("Test case 4: Invalid die select input");
    $display("Rolled Number: %d", rolled_number);
    $display("");

    // Test case 5: Random number generation
    #((CLK_PERIOD)*2) roll = 1;
    #((CLK_PERIOD)*10) roll = 0;
    $display("Test case 5: Random number generation");
    $display("Rolled Number: %d", rolled_number);
    $display("");

    // End simulation
    $finish;
  end

endmodule
```

This testbench module tests five cases, including the important edge cases mentioned earlier. It verifies the output using display statements.