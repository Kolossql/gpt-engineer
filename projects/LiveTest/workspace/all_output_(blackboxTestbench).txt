The necessary blocks for the testbench are:

1. Initialization block: This block will initialize the inputs and outputs of the ABROStateMachine module and set the initial conditions for the testbench.

2. Test case blocks: These blocks will each test a specific case or edge case. They will set the inputs to the ABROStateMachine module, run the module, and then check the outputs against the expected results.

The important edge cases to test are:

1. Both inputs A and B are 0.
2. Both inputs A and B are 1.
3. Input A is 1 and input B is 0.
4. Input A is 0 and input B is 1.
5. The active-low reset is triggered.

Now, let's write the testbench module.

testbench.v
```verilog
`timescale 1ns / 1ps

module ABROStateMachine_tb;
    // Inputs
    reg clk;
    reg reset_n;
    reg A;
    reg B;

    // Outputs
    wire O;
    wire [1:0] state;

    // Instantiate the Unit Under Test (UUT)
    ABROStateMachine uut (
        .clk(clk), 
        .reset_n(reset_n), 
        .A(A), 
        .B(B), 
        .O(O), 
        .state(state)
    );

    initial begin
        // Initialize Inputs
        clk = 0;
        reset_n = 0;
        A = 0;
        B = 0;

        // Dump waveforms
        $dumpfile("WaveOutput.vcd");
        $dumpvars(0, ABROStateMachine_tb);

        // Test Case 1: Both inputs are 0
        #10 A = 0; B = 0;
        #10 if (O == 0 && state == 2'b00) $display("Test Case 1: Passed");
        else $display("Test Case 1: Failed");

        // Test Case 2: Both inputs are 1
        #10 A = 1; B = 1;
        #10 if (O == 1 && state == 2'b11) $display("Test Case 2: Passed");
        else $display("Test Case 2: Failed");

        // Test Case 3: A is 1 and B is 0
        #10 A = 1; B = 0;
        #10 if (O == 0 && state == 2'b10) $display("Test Case 3: Passed");
        else $display("Test Case 3: Failed");

        // Test Case 4: A is 0 and B is 1
        #10 A = 0; B = 1;
        #10 if (O == 0 && state == 2'b01) $display("Test Case 4: Passed");
        else $display("Test Case 4: Failed");

        // Test Case 5: Active-low reset is triggered
        #10 reset_n = 1;
        #10 if (O == 0 && state == 2'b00) $display("Test Case 5: Passed");
        else $display("Test Case 5: Failed");

        // End of tests
        $finish;
    end

    // Clock generator
    always #5 clk = ~clk;
endmodule
```
This testbench module tests the ABROStateMachine module for the five cases and edge cases as concisely as possible. It verifies the output using display statements and gtkwave. The display statements output "Passed" when a test is successfully passed by the module and "Failed" when a test is failed. The lines "$dumpfile("WaveOutput.vcd)" and "$dumpvars(0, ABROStateMachine_tb)" are included.