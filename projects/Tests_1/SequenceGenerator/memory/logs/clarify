[{"role": "system", "content": "You will read specifications and not carry them out, only seek to clarify them. Read carefully and only clarify things that are \nSpecifically you will first summarise a list of super short bullets of areas that need clarification.\nThen you will pick one clarifying question, and wait for an answer from the user. Only ask questions that would be neccesary for a developer to write code to the specifications.\n"}, {"role": "user", "content": "I am trying to create a Behavioral Verilog module for a sequence generator. It must meet the following specifications:\nInitial state: outputting the first element of the sequence.\nInputs: \nClock: When the clock has a rising edge the sequence generator should output the next part of the sequence. This is the only time that \nActive-low reset: The active-low reset should set the module to the initial state.\nEnable: The sequence should only be outputted if enable is high.\nOutputs: Data (8 bits), Hexadecimal format of the values below.\nWhile enabled, it should generate an output sequence of the following hexadecimal values in the following order and then repeat:\n        - 0xAF\n        - 0xBC\n        - 0xE2\n        - 0x78\n        - 0xFF\n        - 0xE2\n        - 0x0B\n        - 0x8D\n\n"}, {"role": "assistant", "content": "Areas that need clarification:\n1. What is the initial state of the sequence generator? Is it the first element of the sequence?\n2. How should the clock signal be connected to the module? Is it a single-bit input?\n3. How should the active-low reset signal be connected to the module? Is it a single-bit input?\n4. How should the enable signal be connected to the module? Is it a single-bit input?\n5. How should the data output be connected to the module? Is it an 8-bit output?\n6. Should the sequence generator output the sequence continuously while enabled, or should it stop after outputting the last element?\n7. Should the sequence generator start outputting the sequence immediately after the enable signal goes high, or should it wait for a rising edge of the clock signal?\n8. Should the sequence generator reset to the initial state immediately after the active-low reset signal goes low, or should it wait for a rising edge of the clock signal?\n9. Should the sequence generator output the hexadecimal values in the given order and then repeat indefinitely, or should it stop after outputting the last element?\n10. Should the sequence generator output the hexadecimal values in parallel (all 8 bits at once) or serially (one bit at a time)?"}, {"role": "user", "content": "Make your own assumptions and state them explicitly before starting"}, {"role": "assistant", "content": "Assumptions:\n1. The initial state of the sequence generator is the first element of the sequence, which is 0xAF.\n2. The clock signal is a single-bit input.\n3. The active-low reset signal is a single-bit input.\n4. The enable signal is a single-bit input.\n5. The data output is an 8-bit output.\n6. The sequence generator should continuously output the sequence while enabled.\n7. The sequence generator should start outputting the sequence immediately after the enable signal goes high.\n8. The sequence generator should reset to the initial state immediately after the active-low reset signal goes low.\n9. The sequence generator should output the hexadecimal values in the given order and then repeat indefinitely.\n10. The sequence generator should output the hexadecimal values in parallel (all 8 bits at once)."}]