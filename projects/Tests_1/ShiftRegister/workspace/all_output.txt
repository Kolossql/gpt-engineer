The blocks necessary to properly test the shift register module are:
1. Testbench module: This module will instantiate the shift register module and provide stimulus to its inputs. It will also monitor the outputs of the shift register module and verify their correctness.

Important edge cases to test in the testbench:
1. Test the initial state of the shift register module.
2. Test the behavior of the shift register module when the Shift enable input is low.
3. Test the behavior of the shift register module when the Active-low reset input is low.
4. Test the shifting operation of the shift register module when the Shift enable input is high.
5. Test the output of the shift register module when the Data input is changed.

Now, let's proceed with the content of the testbench module:

**shift_register_tb.v**
```verilog
module shift_register_tb;

  // Parameters
  parameter CLK_PERIOD = 10; // Clock period in ns

  // Inputs
  reg clk;
  reg reset;
  reg shift_enable;
  reg data;

  // Outputs
  wire [7:0] stored_data;

  // Instantiate the shift register module
  shift_register dut (
    .clk(clk),
    .reset(reset),
    .shift_enable(shift_enable),
    .data(data),
    .stored_data(stored_data)
  );

  // Clock generation
  always #((CLK_PERIOD)/2) clk = ~clk;

  // Initial state test
  initial begin
    $display("Test: Initial State");
    reset = 1;
    shift_enable = 0;
    data = 0;
    #10;
    reset = 0;
    #10;
    $display("Stored Data: %b", stored_data);
    $finish;
  end

  // Shift enable low test
  initial begin
    $display("Test: Shift Enable Low");
    reset = 0;
    shift_enable = 0;
    data = 1;
    #10;
    $display("Stored Data: %b", stored_data);
    $finish;
  end

  // Active-low reset test
  initial begin
    $display("Test: Active-low Reset");
    reset = 1;
    shift_enable = 1;
    data = 1;
    #10;
    reset = 0;
    #10;
    $display("Stored Data: %b", stored_data);
    $finish;
  end

  // Shifting operation test
  initial begin
    $display("Test: Shifting Operation");
    reset = 0;
    shift_enable = 1;
    data = 1;
    #10;
    data = 0;
    #10;
    data = 1;
    #10;
    data = 0;
    #10;
    $display("Stored Data: %b", stored_data);
    $finish;
  end

  // Data change test
  initial begin
    $display("Test: Data Change");
    reset = 0;
    shift_enable = 1;
    data = 1;
    #10;
    data = 0;
    #10;
    data = 1;
    #10;
    data = 0;
    #10;
    data = 1;
    #10;
    $display("Stored Data: %b", stored_data);
    $finish;
  end

endmodule
```

This testbench module tests the shift register module in five different cases:
1. Initial State: It verifies the initial state of the shift register module after reset.
2. Shift Enable Low: It tests the behavior of the shift register module when the Shift enable input is low.
3. Active-low Reset: It tests the behavior of the shift register module when the Active-low reset input is low.
4. Shifting Operation: It tests the shifting operation of the shift register module when the Shift enable input is high.
5. Data Change: It tests the output of the shift register module when the Data input is changed.

The testbench module instantiates the shift register module and provides stimulus to its inputs. It also monitors the outputs of the shift register module and displays them using the `$display` system task. The testbench module uses an initial block to control the inputs and observe the outputs at different time intervals. The clock is generated using an `always` block with a specified clock period.